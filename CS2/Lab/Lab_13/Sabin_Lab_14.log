Script started on 2024-03-21 16:47:09-05:00 [TERM="xterm-256color" TTY="/dev/pts/0" COLUMNS="348" LINES="65"]
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ pwd
[?2004l/home/jovyan/CS2/Lab/Lab_13
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ -[Kla[Ks -la
[?2004ltotal 84
drwxr-sr-x  3 jovyan users  4096 Mar 21 16:47 [0m[01;34m.[0m
drwxr-sr-x 16 jovyan users  4096 Mar 15 14:40 [01;34m..[0m
-rw-r--r--  1 jovyan users  6951 Mar 21 16:43 Board.cpp
-rw-r--r--  1 jovyan users   660 Mar 21 09:36 board.h
drwxr-sr-x  2 jovyan users  4096 Mar 15 16:24 [01;34m.ipynb_checkpoints[0m
-rw-r--r--  1 jovyan users   246 Mar 21 16:28 minesweeper.cpp
-rw-r--r--  1 jovyan users  5545 Mar 15 16:26 Sabin_Lab_13.log
-rw-r--r--  1 jovyan users 21191 Mar 15 16:27 Sabin_Lab_13.pdf
-rw-r--r--  1 jovyan users     0 Mar 21 16:47 Sabin_Lab_14.log
-rwxr-xr-x  1 jovyan users 22088 Mar 21 16:43 [01;32msweep[0m
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ cat -n Board.h
[?2004lcat: Board.h: No such file or directory
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ cat -n board.h
[?2004l     1	#ifndef BOARD_H
     2	#define BOARD_H
     3	#include <array>
     4	
     5	const int kRowSize {8};
     6	const int kColSize {8};
     7	
     8	class Board{
     9	private:
    10	    std::array< std::array< char, kColSize>, kRowSize> arrBoard{};
    11	    int mine_count{};
    12	
    13	public:
    14	    //default constructor
    15	    Board();
    16	    //function called place_mines; will randomly place mines on a board
    17	    void place_mines();
    18	    //function called update_counts; will show the amount of mines near the tile
    19	    void update_counts();
    20	    //function called revealed_board to display the board in 2-d fasshion
    21	    void revealed_board();
    22	
    23	    //default destructor
    24	    ~Board(){
    25	        std::cout << "Board revealed\n";
    26	    }
    27	};
    28	
    29	
    30	#endif[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ cat -n b[KBoard.cpp
[?2004l     1	#include <iostream>
     2	#include "board.h"
     3	#include <cstdlib>
     4	#include <ctime>
     5	#include <iomanip>
     6	
     7	
     8	//Loop through the array, and set the index to 0
     9	//Initialize mine_count to 10
    10	Board::Board(){
    11	    for(int i{0}; i < kRowSize; i++){
    12	        for(int j{0}; j < kColSize; j++){
    13	            arrBoard[i][j] = '0';
    14	        }
    15	    }
    16	
    17	    mine_count = 10;
    18	}
    19	
    20	void Board::place_mines(){
    21	    //Seed the random number generator 
    22	    std::srand(static_cast<unsigned int>(std::time(nullptr)));
    23	    
    24	    for(int i{0}; i < mine_count; i++){
    25	        //Produce a random row and col
    26	        int row = std::rand() % kRowSize;
    27	        int col = std::rand() % kColSize;
    28	
    29	        //Check to see if the index is already a mine
    30	        if(arrBoard[row][col] != 'M'){
    31	            //If a mine is not present, place the mine
    32	            arrBoard[row][col] = 'M';
    33	        } else{
    34	            //If no mine is placed, subtract one
    35	            //As we did not place a mine
    36	            i--;
    37	        }
    38	    }
    39	    
    40	}
    41	
    42	//Loop through the array, print out the index
    43	void Board::revealed_board(){
    44	    for(int i{0}; i < kRowSize; i++){
    45	        std::cout << "|---|---|---|---|---|---|---|---|\n";
    46	        for(int j{0}; j < kColSize; j++){
    47	            std::cout << '|' <<std::setw(2) << arrBoard[i][j] << ' ' ;
    48	        }
    49	        std::cout << '|' << '\n';
    50	    }
    51	    std::cout << "|---|---|---|---|---|---|---|---|\n";
    52	}
    53	
    54	void Board::update_counts(){
    55	    for(int row{0}; row < kRowSize; row++){
    56	        for(int col{0}; col < kColSize; col++){
    57	            int count{0};
    58	            if(arrBoard[row][col] != 'M'){
    59	                //if row is 0
    60	                if(row == 0){
    61	                    //if col is 0
    62	                    if(col == 0){
    63	                        //you can chck one row below, below to right, and right
    64	                        if (arrBoard.at(row+1).at(col) == 'M') {count += 1;}
    65	                        if (arrBoard.at(row+1).at(col+1) == 'M') {count += 1;}
    66	                        if (arrBoard.at(row).at(col+1)== 'M') {count += 1;}
    67	                        arrBoard[row][col] = static_cast<char>(count + '0');
    68	                        //else if col is 7;
    69	                    }else if(col == 7){
    70	                        //you can check one row below, below to the left, and the left
    71	                        if (arrBoard.at(row+1).at(col) == 'M') {count += 1;}
    72	                        if (arrBoard.at(row+1).at(col-1) == 'M') {count += 1;}
    73	                        if (arrBoard.at(row).at(col-1)== 'M') {count += 1;}
    74	                        arrBoard[row][col] = static_cast<char>(count + '0');
    75	                         //else
    76	                    }else{
    77	                        //you can check one row below (r/l/c), and l/r
    78	                        if (arrBoard.at(row+1).at(col) == 'M') {count += 1;}
    79	                        if (arrBoard.at(row+1).at(col-1) == 'M') {count += 1;}
    80	                        if (arrBoard.at(row+1).at(col+1) == 'M') {count += 1;}
    81	                        if (arrBoard.at(row).at(col+1)== 'M') {count += 1;}
    82	                        if (arrBoard.at(row).at(col-1)== 'M') {count += 1;}
    83	                        arrBoard[row][col] = static_cast<char>(count + '0');
    84	                    }
    85	                    //else if row is 7
    86	                }else if(row == 7){
    87	                    //if col is 0
    88	                    if(col == 0){
    89	                        //you can check up a row, up to the right, and right
    90	                        if (arrBoard.at(row-1).at(col) == 'M') {count += 1;}
    91	                        if (arrBoard.at(row-1).at(col+1) == 'M') {count += 1;}
    92	                        if (arrBoard.at(row).at(col+1)== 'M') {count += 1;}
    93	                        arrBoard[row][col] = static_cast<char>(count + '0');
    94	                        //else if col is 7
    95	                    }else if(col == 7){
    96	                        //you can check up a row, up to the left, and to the left
    97	                        if (arrBoard.at(row-1).at(col) == 'M') {count += 1;}
    98	                        if (arrBoard.at(row-1).at(col-1) == 'M') {count += 1;}
    99	                        if (arrBoard.at(row).at(col-1)== 'M') {count += 1;}
   100	                        arrBoard[row][col] = static_cast<char>(count + '0');
   101	                        //else you can check up a row(r/l/c) and l/r
   102	                    }else{
   103	                        if (arrBoard.at(row-1).at(col) == 'M') {count += 1;}
   104	                        if (arrBoard.at(row-1).at(col-1) == 'M') {count += 1;}
   105	                        if (arrBoard.at(row-1).at(col+1) == 'M') {count += 1;}
   106	                        if (arrBoard.at(row).at(col+1)== 'M') {count += 1;}
   107	                        if (arrBoard.at(row).at(col-1)== 'M') {count += 1;}
   108	                        arrBoard[row][col] = static_cast<char>(count = '0');
   109	                    }
   110	                    //else
   111	                }else{
   112	                    //if col is 0
   113	                    if(col == 0){
   114	                        //you can check up/down center, up/down to the right, and to the right
   115	                        if (arrBoard.at(row+1).at(col) == 'M') {count += 1;}
   116	                        if (arrBoard.at(row+1).at(col+1) == 'M') {count += 1;}
   117	                        if (arrBoard.at(row-1).at(col) == 'M') {count += 1;}
   118	                        if (arrBoard.at(row-1).at(col+1) == 'M') {count += 1;}
   119	                        if (arrBoard.at(row).at(col+1)== 'M') {count += 1;}
   120	                        arrBoard[row][col] = static_cast<char>(count + '0');
   121	                        //else if col is 7
   122	                    }else if(col == 7){
   123	                        //you can check up/down center, up/down to the left, and to the left
   124	                        if (arrBoard.at(row+1).at(col-1) == 'M') {count += 1;}
   125	                        if (arrBoard.at(row+1).at(col) == 'M') {count += 1;}
   126	                        if (arrBoard.at(row-1).at(col-1) == 'M') {count += 1;}
   127	                        if (arrBoard.at(row-1).at(col) == 'M') {count += 1;}
   128	                        if (arrBoard.at(row).at(col-1) == 'M') {count += 1;}
   129	                        arrBoard[row][col] = static_cast<char>(count + '0');
   130	                    }else{
   131	                        //check up/down (r/l/c) and r/l
   132	                        if (arrBoard.at(row+1).at(col-1) == 'M') {count += 1;}
   133	                        if (arrBoard.at(row+1).at(col) == 'M') {count += 1;}
   134	                        if (arrBoard.at(row+1).at(col+1) == 'M') {count += 1;}
   135	                        if (arrBoard.at(row).at(col-1) == 'M') {count += 1;}
   136	                        if (arrBoard.at(row).at(col+1)== 'M') {count += 1;}
   137	                        if (arrBoard.at(row-1).at(col-1) == 'M') {count += 1;}
   138	                        if (arrBoard.at(row-1).at(col) == 'M') {count += 1;}
   139	                        if (arrBoard.at(row-1).at(col+1) == 'M') {count += 1;}
   140	                        arrBoard[row][col] = static_cast<char>(count + '0');
   141	                    }
   142	                }
   143	            }
   144	        }
   145	    }
   146	}               [?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ cat -n minesweeper.cpp
[?2004l     1	#include <iostream>
     2	#include "board.h"
     3	#include <cstdlib>
     4	#include <ctime>
     5	#include <iomanip>
     6	
     7	int main(){
     8	
     9	    Board sampleBoard;
    10	
    11	    sampleBoard.place_mines();
    12	    sampleBoard.update_counts();
    13	    sampleBoard.revealed_board();
    14	
    15	    return 0;
    16	}[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ g++ -Wall -Wextra -Werror minesweeper.cpp Board.cpp -o sweep
[?2004l[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ ./sweep
[?2004l|---|---|---|---|---|---|---|---|
| 0 | 0 | 0 | 0 | 0 | 1 | M | 1 |
|---|---|---|---|---|---|---|---|
| 0 | 0 | 0 | 0 | 1 | 3 | 3 | 2 |
|---|---|---|---|---|---|---|---|
| 0 | 1 | 1 | 1 | 2 | M | M | 1 |
|---|---|---|---|---|---|---|---|
| 1 | 2 | M | 1 | 2 | M | 3 | 1 |
|---|---|---|---|---|---|---|---|
| 1 | M | 2 | 1 | 1 | 1 | 1 | 0 |
|---|---|---|---|---|---|---|---|
| 2 | 2 | 2 | 0 | 1 | 2 | 2 | 1 |
|---|---|---|---|---|---|---|---|
| 1 | M | 1 | 1 | 2 | M | M | 1 |
|---|---|---|---|---|---|---|---|
| 1 | 0 | 0 | 0 | M | 0 | 0 | 1 |
|---|---|---|---|---|---|---|---|
Board revealed
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ ./sweep
[?2004l|---|---|---|---|---|---|---|---|
| M | 1 | 0 | 0 | 0 | 1 | M | 1 |
|---|---|---|---|---|---|---|---|
| 2 | 2 | 0 | 1 | 1 | 2 | 1 | 1 |
|---|---|---|---|---|---|---|---|
| M | 1 | 0 | 1 | M | 1 | 0 | 0 |
|---|---|---|---|---|---|---|---|
| 2 | 2 | 0 | 1 | 2 | 2 | 1 | 0 |
|---|---|---|---|---|---|---|---|
| M | 2 | 1 | 0 | 1 | M | 1 | 0 |
|---|---|---|---|---|---|---|---|
| 3 | M | 2 | 0 | 1 | 1 | 1 | 0 |
|---|---|---|---|---|---|---|---|
| 2 | M | 3 | 2 | 1 | 1 | 0 | 0 |
|---|---|---|---|---|---|---|---|
| 1 | 0 | M | 0 | M | 0 | 0 | 0 |
|---|---|---|---|---|---|---|---|
Board revealed
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ ./sweep
[?2004l|---|---|---|---|---|---|---|---|
| M | 1 | 0 | 1 | M | 2 | 2 | M |
|---|---|---|---|---|---|---|---|
| 2 | 2 | 0 | 1 | 1 | 2 | M | 2 |
|---|---|---|---|---|---|---|---|
| M | 1 | 1 | 1 | 1 | 1 | 1 | 1 |
|---|---|---|---|---|---|---|---|
| 1 | 1 | 1 | M | 1 | 0 | 1 | 1 |
|---|---|---|---|---|---|---|---|
| 0 | 0 | 1 | 1 | 1 | 0 | 2 | M |
|---|---|---|---|---|---|---|---|
| 0 | 0 | 0 | 0 | 0 | 1 | 4 | M |
|---|---|---|---|---|---|---|---|
| 0 | 0 | 0 | 0 | 0 | 1 | M | M |
|---|---|---|---|---|---|---|---|
| 0 | 0 | 0 | 0 | 0 | 0 | 0 | 2 |
|---|---|---|---|---|---|---|---|
Board revealed
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ ./sweep
[?2004l|---|---|---|---|---|---|---|---|
| 0 | 1 | M | 2 | M | 1 | 0 | 0 |
|---|---|---|---|---|---|---|---|
| 0 | 1 | 1 | 3 | 2 | 3 | 1 | 1 |
|---|---|---|---|---|---|---|---|
| 0 | 1 | 1 | 2 | M | 2 | M | 1 |
|---|---|---|---|---|---|---|---|
| 0 | 1 | M | 2 | 2 | 3 | 2 | 1 |
|---|---|---|---|---|---|---|---|
| 0 | 1 | 1 | 1 | 1 | M | 1 | 0 |
|---|---|---|---|---|---|---|---|
| 1 | 1 | 1 | 1 | 2 | 1 | 1 | 0 |
|---|---|---|---|---|---|---|---|
| M | 1 | 1 | M | 2 | 1 | 1 | 1 |
|---|---|---|---|---|---|---|---|
| 1 | 0 | 0 | 0 | M | 0 | 0 | M |
|---|---|---|---|---|---|---|---|
Board revealed
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ ./sweep
[?2004l|---|---|---|---|---|---|---|---|
| M | 1 | 0 | 0 | 0 | 0 | 0 | 0 |
|---|---|---|---|---|---|---|---|
| 1 | 1 | 0 | 0 | 0 | 0 | 0 | 0 |
|---|---|---|---|---|---|---|---|
| 0 | 0 | 0 | 0 | 1 | 1 | 2 | 1 |
|---|---|---|---|---|---|---|---|
| 1 | 2 | 1 | 1 | 1 | M | 2 | M |
|---|---|---|---|---|---|---|---|
| M | 2 | M | 1 | 2 | 2 | 3 | 1 |
|---|---|---|---|---|---|---|---|
| 1 | 2 | 2 | 2 | 3 | M | 2 | 0 |
|---|---|---|---|---|---|---|---|
| 0 | 1 | 3 | M | 4 | M | 2 | 0 |
|---|---|---|---|---|---|---|---|
| 0 | 0 | M | M | 0 | 0 | 0 | 0 |
|---|---|---|---|---|---|---|---|
Board revealed
[?2004h(base) ]0;jovyan@jupyter-tes4j: ~/CS2/Lab/Lab_13[01;32mjovyan@jupyter-tes4j[00m:[01;34m~/CS2/Lab/Lab_13[00m$ exit
[?2004lexit

Script done on 2024-03-21 16:48:45-05:00 [COMMAND_EXIT_CODE="0"]
